{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortBy","type","setState","ALPABET","LENGTH","reverse","reset","this","visibleGoods","goods","sort","good1","good2","localeCompare","length","getReorderedGoods","className","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA4CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,OAAS,SAACC,GACK,YAATA,GACF,EAAKC,SAAS,CAAEJ,SAAUL,EAASU,UAGxB,WAATF,GACF,EAAKC,SAAS,CAAEJ,SAAUL,EAASW,UAZzC,EAgBEC,QAAU,WACR,EAAKH,UAAS,SAAAN,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAlBzB,EAsBES,MAAQ,WACN,EAAKJ,SAAS,CACZJ,SAAUL,EAASM,KACnBF,YAAY,KAzBlB,4CA6BE,WAAU,IAAD,OACP,EAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdU,EAhEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNW,EAAY,YAAOC,GAmBzB,OAjBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,KAAKL,EAASU,QACZ,OAAOQ,EAAME,cAAcD,GAE7B,KAAKnB,EAASW,OACZ,OAAOO,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITjB,GACFW,EAAaH,UAGRG,EAwCgBO,CACnBrB,EAAiB,CAAEI,WAAUD,eAG/B,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEf,KAAK,SACLe,UAAWC,IAAW,SAAU,UAAW,CACzC,WAAYnB,IAAaL,EAASU,UAEpCe,QAAS,kBAAM,EAAKlB,OAAO,YAL7B,iCAUA,wBACEC,KAAK,SACLe,UAAWC,IACT,SACA,aACA,CAAE,WAAYnB,IAAaL,EAASW,SAEtCc,QAAS,kBAAM,EAAKlB,OAAO,WAP7B,4BAYA,wBACEC,KAAK,SACLe,UAAWC,IACT,SACA,aACA,CAAE,YAAapB,IAEjBqB,QAASX,KAAKF,QAPhB,sBAYER,GAAcC,IAAaL,EAASM,OACpC,wBACEE,KAAK,SACLe,UAAU,4BACVE,QAASX,KAAKD,MAHhB,sBAUJ,6BACGE,EAAaW,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eAtFrB,GAAyBC,IAAMC,WC3D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b23b1ac3.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortBy = (type: string) => {\n    if (type === 'ALPABET') {\n      this.setState({ sortType: SortType.ALPABET });\n    }\n\n    if (type === 'LENGTH') {\n      this.setState({ sortType: SortType.LENGTH });\n    }\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer, { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-info', {\n              'is-light': sortType !== SortType.ALPABET,\n            })}\n            onClick={() => this.sortBy('ALPABET')}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => this.sortBy('LENGTH')}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}